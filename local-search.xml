<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>感知机代码复现（Python）及最终结果可视化</title>
    <link href="/2024/03/06/%E6%84%9F%E7%9F%A5%E6%9C%BA/"/>
    <url>/2024/03/06/%E6%84%9F%E7%9F%A5%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<p>众所周知，<strong>感知机</strong>是机器学习中<s>很重要</s>最简单的模型之一，它能够做到的，是进行<strong>简单的线性分类</strong>。但是，值得一提的是，随着感知机层数的叠加，某些非线性的分类问题也可以被解决。</p><p>感知机的学习算法是<strong>误分类</strong>驱动的，具体采用的则是经典的<strong>随机梯度下降法（Stochastic Gradient Descent）</strong>，这也意味着，对<strong>权重（weight）<em>w</em></strong>以及<strong>偏置（bias）<em>b</em></strong>的更新遵循如下的法则：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>←</mo><mi>w</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>b</mi><mo>←</mo><mi>w</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w \leftarrow w + \eta y_ix_i \\b \leftarrow w + \eta y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span>为<strong>学习率（Learning Rate）</strong>，它的取值区间是[0,1]；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为误分类的点的<strong>Features</strong>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant="normal">Υ</mi><mo>=</mo><mo stretchy="false">{</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y_i \in \Upsilon = \{+1,-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Υ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">}</span></span></span></span>。</p><p><em>w</em>和<em>b</em>会持续更新到训练集中<strong>不再存在误分类</strong>，而该算法的<strong>收敛性</strong>已经得到了严格的证明，故必然在有限次的迭代过程中可以实现。</p><p>下面，就根据李航老师的《统计学习方法》一书中的<strong>例题2.1</strong>，使用Python进行感知机代码复现，并将最后的分类结果进行了可视化，这也使得感知机的学习过程和最终结果更清晰：</p><p>代码中已经有简洁的注释。注意到，<strong>Update函数</strong>实现的是每次误分类后利用随机梯度下降对<em>w</em>和<em>b</em>的更新；<strong>Check函数</strong>实现的则是对训练集（train_set）的检查，从而判断是否对<em>w</em>和<em>b</em>进行Update。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment">#Traning set and global variable</span><br>train_set = np.array([[<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>]])<br>w = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">0</span>])<br>b = <span class="hljs-number">0</span><br><span class="hljs-comment">#Learning rate</span><br>r = <span class="hljs-number">1</span><br><br><span class="hljs-comment">#Gradient descent to Update w and b</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Update</span>(<span class="hljs-params">item</span>):<br>    <span class="hljs-keyword">global</span> w , b<br>    <span class="hljs-comment">#w-&gt;w+r*xi*yi,y-&gt;y+r*yi</span><br>    w += r*item[-<span class="hljs-number">1</span>]*item[:-<span class="hljs-number">1</span>]<br>    b += r*item[-<span class="hljs-number">1</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;After updating,w=&#123;&#125;,b=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(w,b))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Check</span>():<br>    flag = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> train_set:<br>        jud = <span class="hljs-number">0</span><br>        <span class="hljs-comment">#if yi*(w*x+b)&lt;=0 ,proves that this point is at the wrong position</span><br>        jud += (w*item[:-<span class="hljs-number">1</span>]).<span class="hljs-built_in">sum</span>() + b<br>        jud *= item[-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">if</span> jud &lt;= <span class="hljs-number">0</span>:<br>            flag = <span class="hljs-literal">True</span><br>            Update(item)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> flag<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    Class_flag = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> Check():<br>            Class_flag = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> Class_flag:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The classification can be done in less than 100 iterations.&quot;</span>)<br>        <span class="hljs-comment">#Draw the picture</span><br>        x_1 = [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br>        x_2 = [<span class="hljs-number">3</span>,<span class="hljs-number">3</span>]<br>        plt.scatter(x_1,x_2,c=<span class="hljs-string">&#x27;red&#x27;</span>,s=<span class="hljs-number">100</span>,label=<span class="hljs-string">&#x27;1&#x27;</span>)<br>        x_11 = [<span class="hljs-number">1</span>]<br>        x_21 = [<span class="hljs-number">1</span>]<br>        plt.scatter(x_11, x_21, c=<span class="hljs-string">&#x27;blue&#x27;</span>, s=<span class="hljs-number">100</span>, label=<span class="hljs-string">&#x27;-1&#x27;</span>)<br>        x_111 = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">100</span>)<br>        x_211 = (w[<span class="hljs-number">0</span>]*x_111 + b)/(-w[<span class="hljs-number">1</span>])<br>        plt.plot(x_111, x_211)<br>        plt.xticks(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>))<br>        plt.yticks(<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>))<br>        plt.xlabel(<span class="hljs-string">&quot;x1&quot;</span>, fontdict=&#123;<span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-number">16</span>&#125;)<br>        plt.ylabel(<span class="hljs-string">&quot;x2&quot;</span>, fontdict=&#123;<span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-number">16</span>&#125;)<br>        plt.legend(loc=<span class="hljs-string">&#x27;best&#x27;</span>)<br>        plt.show()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The classification can not be done in less than 100 iterations.&quot;</span>)<br></code></pre></td></tr></table></figure><p>上述代码的运行结果为：<br><img src="/img/result.png" alt=""></p><p>可视化的结果为：<br><img src="/img/result1.png" alt=""></p><p>参考资料：1.《统计学习方法》 李航;2.<a href="https://blog.csdn.net/qq_44714448/article/details/125953251">感知机算法之Python代码实现</a></p><p><em>千里之行，始于足下。</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>The record of learning Andrew Ng&#39;s Machine Learning Lessons</title>
    <link href="/2024/02/24/MachineLearning/"/>
    <url>/2024/02/24/MachineLearning/</url>
    
    <content type="html"><![CDATA[<p>在这里也挖一个坑，记录本人学习吴恩达老师机器学习的进度，希望在<strong>5月</strong>之前完成这门课程的学习。</p><p>目前进度：</p><p><img src="https://progress-bar.dev/45/" alt=""></p><p>同时，Lab的代码会在我的<strong>github主页</strong>进行更新。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>致谢</title>
    <link href="/2024/02/21/%E8%87%B4%E8%B0%A2/"/>
    <url>/2024/02/21/%E8%87%B4%E8%B0%A2/</url>
    
    <content type="html"><![CDATA[<p>首先，感谢正在访问本博客的你，你的关注与收藏是我搭建以及更新网站的动力，<strong>祝，工作顺利，生活愉快。</strong></p><p>其次，感谢我的朋友<em>Bakshoi</em>，他在本网站的搭建中起了决定性的作用。</p><p>最后，感谢我的妻子<em>Julia</em>，她总会在我最焦虑不安的时候抚慰我，以后的<em>post</em>中可能会有某些记录我们日常生活喜怒哀乐的部分。毕竟，实现<strong>WLB</strong>是我的终极目标。因此，自然地，她也会成为本网站的<em>contributor</em>之一。</p><p>即使此刻<em><a href="http://yooheng416.com">yooheng416.com</a></em>默默无闻，但来日方长，<em>ta</em>会记录我的每一步<strong>成长、迷茫和试错</strong>。</p><p><em>Pain is inavitable. Suffering is optional.</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
